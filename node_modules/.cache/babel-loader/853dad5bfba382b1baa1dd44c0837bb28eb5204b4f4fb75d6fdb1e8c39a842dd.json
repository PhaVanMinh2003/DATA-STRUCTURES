{"ast":null,"code":"var _jsxFileName = \"/Users/phamvanminh/Workspace/academy/CTDL/algorithms-graphs/src/components/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  selectedAlgorithm,\n  setSelectedAlgorithm\n}) {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [extraInput, setExtraInput] = useState('');\n  const [result, setResult] = useState('');\n  const [error, setError] = useState('');\n  const parseInputData = () => {\n    try {\n      // Parse dữ liệu đầu vào dựa trên thuật toán\n      if (['bubbleSort', 'quickSort'].includes(selectedAlgorithm)) {\n        // Chuyển đổi input thành mảng số\n        const array = inputData.split(',').map(item => {\n          const num = parseInt(item.trim());\n          if (isNaN(num)) throw new Error('Invalid number in array');\n          return num;\n        });\n        return array;\n      } else if (['dfs', 'bfs', 'dijkstra'].includes(selectedAlgorithm)) {\n        // Chuyển đổi input thành danh sách cạnh (dạng \"0 1, 1 2, 2 3\")\n        const edges = inputData.split(',').map(edge => {\n          const [from, to] = edge.trim().split(' ').map(Number);\n          if (isNaN(from) || isNaN(to)) throw new Error('Invalid edge format');\n          return [from, to];\n        });\n        return edges;\n      } else if (selectedAlgorithm === 'binarySearch') {\n        // Chuyển đổi input thành mảng số đã sắp xếp\n        const array = inputData.split(',').map(item => {\n          const num = parseInt(item.trim());\n          if (isNaN(num)) throw new Error('Invalid number in array');\n          return num;\n        });\n        const target = parseInt(extraInput);\n        if (isNaN(target)) throw new Error('Invalid target value');\n        return {\n          array,\n          target\n        };\n      }\n      return null;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    }\n  };\n  const runAlgorithm = () => {\n    setError('');\n    setResult('');\n    const parsedData = parseInputData();\n    if (!parsedData) return;\n\n    // Placeholder cho logic thuật toán\n    // Sau này bạn có thể import các hàm từ src/algorithms/ và src/graph/\n    if (['bubbleSort', 'quickSort'].includes(selectedAlgorithm)) {\n      setResult(`Sorted array: ${parsedData.join(', ')} (not implemented)`);\n    } else if (selectedAlgorithm === 'binarySearch') {\n      setResult(`Found at index: -1 (not implemented)`);\n    } else if (['dfs', 'bfs', 'dijkstra'].includes(selectedAlgorithm)) {\n      setResult(`Traversal path: (not implemented)`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-2\",\n      children: selectedAlgorithm || 'Select an Algorithm'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), selectedAlgorithm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg mb-1\",\n        children: \"Input Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputData,\n        onChange: e => setInputData(e.target.value),\n        placeholder: ['bubbleSort', 'quickSort', 'binarySearch'].includes(selectedAlgorithm) ? 'Enter numbers separated by commas (e.g., 5, 2, 9, 1)' : 'Enter edges (e.g., 0 1, 1 2, 2 3)',\n        className: \"w-full max-w-md p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), ['binarySearch', 'dfs', 'bfs', 'dijkstra'].includes(selectedAlgorithm) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: selectedAlgorithm === 'binarySearch' ? 'Target Value:' : 'Start Node:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: extraInput,\n          onChange: e => setExtraInput(e.target.value),\n          placeholder: selectedAlgorithm === 'binarySearch' ? 'Enter target value' : 'Enter start node',\n          className: \"w-full max-w-md p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runAlgorithm,\n        className: \"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Run Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select an algorithm from the sidebar to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), (result || error) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm-result mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg mb-1\",\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-white p-2 border rounded\",\n        children: result || error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualization\",\n        className: \"border rounded mt-2 min-h-[200px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"2ry2tvcVruF+EgD2flAjvjeS1JY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","selectedAlgorithm","setSelectedAlgorithm","_s","inputData","setInputData","extraInput","setExtraInput","result","setResult","error","setError","parseInputData","includes","array","split","map","item","num","parseInt","trim","isNaN","Error","edges","edge","from","to","Number","target","err","message","runAlgorithm","parsedData","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","placeholder","type","onClick","id","_c","$RefreshReg$"],"sources":["/Users/phamvanminh/Workspace/academy/CTDL/algorithms-graphs/src/components/Home/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\n\nfunction Home({ selectedAlgorithm, setSelectedAlgorithm }) {\n  const [inputData, setInputData] = useState('');\n  const [extraInput, setExtraInput] = useState('');\n  const [result, setResult] = useState('');\n  const [error, setError] = useState('');\n\n  const parseInputData = () => {\n    try {\n      // Parse dữ liệu đầu vào dựa trên thuật toán\n      if (['bubbleSort', 'quickSort'].includes(selectedAlgorithm)) {\n        // Chuyển đổi input thành mảng số\n        const array = inputData.split(',').map(item => {\n          const num = parseInt(item.trim());\n          if (isNaN(num)) throw new Error('Invalid number in array');\n          return num;\n        });\n        return array;\n      } else if (['dfs', 'bfs', 'dijkstra'].includes(selectedAlgorithm)) {\n        // Chuyển đổi input thành danh sách cạnh (dạng \"0 1, 1 2, 2 3\")\n        const edges = inputData.split(',').map(edge => {\n          const [from, to] = edge.trim().split(' ').map(Number);\n          if (isNaN(from) || isNaN(to)) throw new Error('Invalid edge format');\n          return [from, to];\n        });\n        return edges;\n      } else if (selectedAlgorithm === 'binarySearch') {\n        // Chuyển đổi input thành mảng số đã sắp xếp\n        const array = inputData.split(',').map(item => {\n          const num = parseInt(item.trim());\n          if (isNaN(num)) throw new Error('Invalid number in array');\n          return num;\n        });\n        const target = parseInt(extraInput);\n        if (isNaN(target)) throw new Error('Invalid target value');\n        return { array, target };\n      }\n      return null;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    }\n  };\n\n  const runAlgorithm = () => {\n    setError('');\n    setResult('');\n\n    const parsedData = parseInputData();\n    if (!parsedData) return;\n\n    // Placeholder cho logic thuật toán\n    // Sau này bạn có thể import các hàm từ src/algorithms/ và src/graph/\n    if (['bubbleSort', 'quickSort'].includes(selectedAlgorithm)) {\n      setResult(`Sorted array: ${parsedData.join(', ')} (not implemented)`);\n    } else if (selectedAlgorithm === 'binarySearch') {\n      setResult(`Found at index: -1 (not implemented)`);\n    } else if (['dfs', 'bfs', 'dijkstra'].includes(selectedAlgorithm)) {\n      setResult(`Traversal path: (not implemented)`);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl mb-2\">\n        {selectedAlgorithm || 'Select an Algorithm'}\n      </h2>\n      {selectedAlgorithm ? (\n        <div className=\"algorithm-input\">\n          <h3 className=\"text-lg mb-1\">Input Data</h3>\n          <textarea\n            value={inputData}\n            onChange={(e) => setInputData(e.target.value)}\n            placeholder={\n              ['bubbleSort', 'quickSort', 'binarySearch'].includes(selectedAlgorithm)\n                ? 'Enter numbers separated by commas (e.g., 5, 2, 9, 1)'\n                : 'Enter edges (e.g., 0 1, 1 2, 2 3)'\n            }\n            className=\"w-full max-w-md p-2 border rounded\"\n          ></textarea>\n          {['binarySearch', 'dfs', 'bfs', 'dijkstra'].includes(selectedAlgorithm) && (\n            <div className=\"mt-2\">\n              <label className=\"block mb-1\">\n                {selectedAlgorithm === 'binarySearch' ? 'Target Value:' : 'Start Node:'}\n              </label>\n              <input\n                type=\"text\"\n                value={extraInput}\n                onChange={(e) => setExtraInput(e.target.value)}\n                placeholder={selectedAlgorithm === 'binarySearch' ? 'Enter target value' : 'Enter start node'}\n                className=\"w-full max-w-md p-2 border rounded\"\n              />\n            </div>\n          )}\n          <button\n            onClick={runAlgorithm}\n            className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n          >\n            Run Algorithm\n          </button>\n          {error && (\n            <p className=\"text-red-600 mt-2\">{error}</p>\n          )}\n        </div>\n      ) : (\n        <p>Select an algorithm from the sidebar to get started.</p>\n      )}\n      {(result || error) && (\n        <div className=\"algorithm-result mt-4\">\n          <h3 className=\"text-lg mb-1\">Result</h3>\n          <pre className=\"bg-white p-2 border rounded\">{result || error}</pre>\n          <div id=\"visualization\" className=\"border rounded mt-2 min-h-[200px]\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}