{"ast":null,"code":"var _jsxFileName = \"/Users/phamvanminh/Workspace/academy/CTDL/DATA-STRUCTURES/algorithms-graphs/src/components/DataStructure/Heap/Heap.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Heap() {\n  _s();\n  // State để lưu trữ Heap (mô phỏng bằng mảng)\n  const [heap, setHeap] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState('');\n\n  // Hàm thêm phần tử vào Heap\n  const addToHeap = () => {\n    const value = inputValue.trim();\n    if (!value || isNaN(value)) {\n      setError('Vui lòng nhập một số hợp lệ!');\n      return;\n    }\n    const num = Number(value);\n    const newHeap = [...heap, num];\n\n    // Sắp xếp lại để duy trì tính chất Max-Heap\n    bubbleUp(newHeap, newHeap.length - 1);\n    setHeap(newHeap);\n    setInputValue('');\n    setError('');\n  };\n\n  // Hàm bubbleUp để duy trì tính chất Max-Heap\n  const bubbleUp = (arr, index) => {\n    while (index > 0) {\n      const parentIndex = Math.floor((index - 1) / 2);\n      if (arr[parentIndex] < arr[index]) {\n        [arr[parentIndex], arr[index]] = [arr[index], arr[parentIndex]];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n  };\n\n  // Hàm xóa phần tử gốc (root) của Heap\n  const removeFromHeap = () => {\n    if (heap.length === 0) {\n      setError('Heap rỗng, không thể xóa!');\n      return;\n    }\n    const newHeap = [...heap];\n    newHeap[0] = newHeap.pop(); // Thay root bằng phần tử cuối\n    if (newHeap.length > 0) {\n      heapify(newHeap, 0); // Sắp xếp lại từ root\n    }\n    setHeap(newHeap);\n    setError('');\n  };\n\n  // Hàm heapify để duy trì tính chất Max-Heap\n  const heapify = (arr, index) => {\n    const left = 2 * index + 1;\n    const right = 2 * index + 2;\n    let largest = index;\n    if (left < arr.length && arr[left] > arr[largest]) {\n      largest = left;\n    }\n    if (right < arr.length && arr[right] > arr[largest]) {\n      largest = right;\n    }\n    if (largest !== index) {\n      [arr[index], arr[largest]] = [arr[largest], arr[index]];\n      heapify(arr, largest);\n    }\n  };\n\n  // Xử lý khi nhấn Enter\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      addToHeap();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container mx-auto py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center font-bold text-2xl mb-4\",\n      children: \"C\\u1EA5u tr\\xFAc d\\u1EEF li\\u1EC7u: Heap (C\\xE2y \\u0111\\u1ED1ng)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold\",\n        children: \"1. L\\xFD thuy\\u1EBFt v\\u1EC1 Heap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Heap l\\xE0 m\\u1ED9t c\\u1EA5u tr\\xFAc d\\u1EEF li\\u1EC7u d\\u1EA1ng c\\xE2y nh\\u1ECB ph\\xE2n, trong \\u0111\\xF3 gi\\xE1 tr\\u1ECB c\\u1EE7a m\\u1ED7i n\\xFAt cha lu\\xF4n th\\u1ECFa m\\xE3n m\\u1ED9t \\u0111i\\u1EC1u ki\\u1EC7n so v\\u1EDBi c\\xE1c n\\xFAt con. Trong \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Max-Heap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 146\n        }, this), \", gi\\xE1 tr\\u1ECB c\\u1EE7a n\\xFAt cha l\\u1EDBn h\\u01A1n ho\\u1EB7c b\\u1EB1ng gi\\xE1 tr\\u1ECB c\\xE1c n\\xFAt con. Ng\\u01B0\\u1EE3c l\\u1EA1i, trong \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Min-Heap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 249\n        }, this), \", n\\xFAt cha nh\\u1ECF h\\u01A1n ho\\u1EB7c b\\u1EB1ng c\\xE1c n\\xFAt con. Heap th\\u01B0\\u1EDDng \\u0111\\u01B0\\u1EE3c tri\\u1EC3n khai b\\u1EB1ng m\\u1EA3ng, v\\u1EDBi hi\\u1EC7u su\\u1EA5t cao cho c\\xE1c thao t\\xE1c nh\\u01B0 th\\xEAm ph\\u1EA7n t\\u1EED (O(log n)) v\\xE0 x\\xF3a ph\\u1EA7n t\\u1EED l\\u1EDBn nh\\u1EA5t/nh\\u1ECF nh\\u1EA5t (O(log n)).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold\",\n        children: \"2. C\\xFA ph\\xE1p c\\u01A1 b\\u1EA3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Th\\xEAm ph\\u1EA7n t\\u1EED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), \": Th\\xEAm ph\\u1EA7n t\\u1EED v\\xE0o cu\\u1ED1i Heap v\\xE0 \\u0111i\\u1EC1u ch\\u1EC9nh (bubble up) \\u0111\\u1EC3 duy tr\\xEC t\\xEDnh ch\\u1EA5t Heap.\", /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-gray-100 p-3 rounded\",\n            children: `heap.push(element); bubbleUp(heap, heap.length - 1);`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"X\\xF3a ph\\u1EA7n t\\u1EED g\\u1ED1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), \": Thay ph\\u1EA7n t\\u1EED g\\u1ED1c b\\u1EB1ng ph\\u1EA7n t\\u1EED cu\\u1ED1i, sau \\u0111\\xF3 \\u0111i\\u1EC1u ch\\u1EC9nh (heapify) t\\u1EEB g\\u1ED1c.\", /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-gray-100 p-3 rounded\",\n            children: `heap[0] = heap.pop(); heapify(heap, 0);`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"L\\u1EA5y ph\\u1EA7n t\\u1EED l\\u1EDBn nh\\u1EA5t (Max-Heap)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \": Truy c\\u1EADp ph\\u1EA7n t\\u1EED \\u0111\\u1EA7u ti\\xEAn c\\u1EE7a m\\u1EA3ng.\", /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-gray-100 p-3 rounded\",\n            children: `heap[0];`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold\",\n        children: \"3. V\\xED d\\u1EE5 minh h\\u1ECDa b\\u1EB1ng PHP s\\u1EED d\\u1EE5ng array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 p-3 rounded\",\n        children: `<?php\n// Mô phỏng Max-Heap bằng mảng\n$heap = [];\n\n// Hàm thêm phần tử\nfunction pushToHeap(&$heap, $value) {\n    $heap[] = $value;\n    $index = count($heap) - 1;\n    while ($index > 0) {\n        $parent = floor(($index - 1) / 2);\n        if ($heap[$parent] < $heap[$index]) {\n            [$heap[$parent], $heap[$index]] = [$heap[$index], $heap[$parent]];\n            $index = $parent;\n        } else {\n            break;\n        }\n    }\n}\n\n// Hàm xóa phần tử gốc\nfunction popFromHeap(&$heap) {\n    if (empty($heap)) return null;\n    $result = $heap[0];\n    $heap[0] = array_pop($heap);\n    $index = 0;\n    while (true) {\n        $left = 2 * $index + 1;\n        $right = 2 * $index + 2;\n        $largest = $index;\n        if ($left < count($heap) && $heap[$left] > $heap[$largest]) {\n            $largest = $left;\n        }\n        if ($right < count($heap) && $heap[$right] > $heap[$largest]) {\n            $largest = $right;\n        }\n        if ($largest != $index) {\n            [$heap[$index], $heap[$largest]] = [$heap[$largest], $heap[$index]];\n            $index = $largest;\n        } else {\n            break;\n        }\n    }\n    return $result;\n}\n\n// Thêm phần tử\npushToHeap($heap, 10);\npushToHeap($heap, 20);\npushToHeap($heap, 15);\n\n// Hiển thị Heap\necho implode(', ', $heap); // 20, 10, 15\n\n// Xóa phần tử gốc\necho popFromHeap($heap); // 20\necho implode(', ', $heap); // 15, 10\n?>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold\",\n        children: \"4. Demo Heap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Heap c\\xF3 th\\u1EC3 \\u0111\\u01B0\\u1EE3c d\\xF9ng trong React \\u0111\\u1EC3 qu\\u1EA3n l\\xFD danh s\\xE1ch \\u01B0u ti\\xEAn, ch\\u1EB3ng h\\u1EA1n s\\u1EAFp x\\u1EBFp c\\xE1c t\\xE1c v\\u1EE5 theo \\u0111\\u1ED9 \\u01B0u ti\\xEAn.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control form-control-sm border border-gray-300 rounded p-2\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Nh\\u1EADp s\\u1ED1 (VD: 10, 20)\",\n          \"aria-label\": \"Nh\\u1EADp s\\u1ED1 \\u0111\\u1EC3 th\\xEAm v\\xE0o Heap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success btn-sm mt-2 mr-2\",\n          onClick: addToHeap,\n          \"aria-label\": \"Th\\xEAm s\\u1ED1 v\\xE0o Heap\",\n          children: \"Th\\xEAm v\\xE0o Heap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger btn-sm mt-2\",\n          onClick: removeFromHeap,\n          \"aria-label\": \"X\\xF3a ph\\u1EA7n t\\u1EED g\\u1ED1c kh\\u1ECFi Heap\",\n          children: \"X\\xF3a ph\\u1EA7n t\\u1EED g\\u1ED1c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm mt-1\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2\",\n          children: \"Danh s\\xE1ch ph\\u1EA7n t\\u1EED trong Heap:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '300px'\n          },\n          children: heap.length > 0 ? heap.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            // Sử dụng item và index để đảm bảo key duy nhất\n            className: \"p-1 bg-blue-600 text-white rounded flex justify-between items-center mb-1\",\n            style: {\n              fontSize: '0.9em',\n              height: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)\n          }, item + '-' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Heap r\\u1ED7ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold\",\n        children: \"5. \\u1EE8ng d\\u1EE5ng c\\u1EE7a Heap trong th\\u1EF1c chi\\u1EBFn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"H\\xE0ng \\u0111\\u1EE3i \\u01B0u ti\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), \": S\\u1EED d\\u1EE5ng Heap \\u0111\\u1EC3 qu\\u1EA3n l\\xFD c\\xE1c t\\xE1c v\\u1EE5 c\\xF3 \\u0111\\u1ED9 \\u01B0u ti\\xEAn, nh\\u01B0 l\\u1EADp l\\u1ECBch c\\xF4ng vi\\u1EC7c ho\\u1EB7c x\\u1EED l\\xFD s\\u1EF1 ki\\u1EC7n.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"T\\xECm ki\\u1EBFm ph\\u1EA7n t\\u1EED l\\u1EDBn nh\\u1EA5t/nh\\u1ECF nh\\u1EA5t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), \": Heap cho ph\\xE9p truy xu\\u1EA5t nhanh ph\\u1EA7n t\\u1EED l\\u1EDBn nh\\u1EA5t (Max-Heap) ho\\u1EB7c nh\\u1ECF nh\\u1EA5t (Min-Heap).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Thu\\u1EADt to\\xE1n Dijkstra/Kruskal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), \": Heap \\u0111\\u01B0\\u1EE3c s\\u1EED d\\u1EE5ng \\u0111\\u1EC3 t\\u1ED1i \\u01B0u h\\xF3a vi\\u1EC7c t\\xECm \\u0111\\u01B0\\u1EDDng \\u0111i ng\\u1EAFn nh\\u1EA5t ho\\u1EB7c c\\xE2y bao tr\\xF9m t\\u1ED1i thi\\u1EC3u.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"X\\u1EED l\\xFD d\\u1EEF li\\u1EC7u th\\u1EDDi gian th\\u1EF1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), \": Heap h\\u1ED7 tr\\u1EE3 qu\\u1EA3n l\\xFD d\\u1EEF li\\u1EC7u theo th\\u1EE9 t\\u1EF1 \\u01B0u ti\\xEAn trong c\\xE1c \\u1EE9ng d\\u1EE5ng nh\\u01B0 h\\u1EC7 th\\u1ED1ng x\\u1EBFp h\\xE0ng ho\\u1EB7c x\\u1EED l\\xFD lu\\u1ED3ng d\\u1EEF li\\u1EC7u.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"V\\u1EDBi hi\\u1EC7u su\\u1EA5t cao v\\xE0 kh\\u1EA3 n\\u0103ng duy tr\\xEC th\\u1EE9 t\\u1EF1, Heap l\\xE0 c\\xF4ng c\\u1EE5 l\\xFD t\\u01B0\\u1EDFng trong c\\xE1c \\u1EE9ng d\\u1EE5ng c\\u1EA7n qu\\u1EA3n l\\xFD \\u01B0u ti\\xEAn ho\\u1EB7c s\\u1EAFp x\\u1EBFp d\\u1EEF li\\u1EC7u.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Heap, \"5q4rsSbEIw3FGC+JC4XD7WXeFgs=\");\n_c = Heap;\nexport default Heap;\nvar _c;\n$RefreshReg$(_c, \"Heap\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Heap","_s","heap","setHeap","inputValue","setInputValue","error","setError","addToHeap","value","trim","isNaN","num","Number","newHeap","bubbleUp","length","arr","index","parentIndex","Math","floor","removeFromHeap","pop","heapify","left","right","largest","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","onKeyPress","placeholder","onClick","style","maxWidth","map","item","fontSize","height","_c","$RefreshReg$"],"sources":["/Users/phamvanminh/Workspace/academy/CTDL/DATA-STRUCTURES/algorithms-graphs/src/components/DataStructure/Heap/Heap.jsx"],"sourcesContent":["import { useState } from 'react';\n\nfunction Heap() {\n  // State để lưu trữ Heap (mô phỏng bằng mảng)\n  const [heap, setHeap] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState('');\n\n  // Hàm thêm phần tử vào Heap\n  const addToHeap = () => {\n    const value = inputValue.trim();\n    if (!value || isNaN(value)) {\n      setError('Vui lòng nhập một số hợp lệ!');\n      return;\n    }\n    const num = Number(value);\n    const newHeap = [...heap, num];\n    \n    // Sắp xếp lại để duy trì tính chất Max-Heap\n    bubbleUp(newHeap, newHeap.length - 1);\n    setHeap(newHeap);\n    setInputValue('');\n    setError('');\n  };\n\n  // Hàm bubbleUp để duy trì tính chất Max-Heap\n  const bubbleUp = (arr, index) => {\n    while (index > 0) {\n      const parentIndex = Math.floor((index - 1) / 2);\n      if (arr[parentIndex] < arr[index]) {\n        [arr[parentIndex], arr[index]] = [arr[index], arr[parentIndex]];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n  };\n\n  // Hàm xóa phần tử gốc (root) của Heap\n  const removeFromHeap = () => {\n    if (heap.length === 0) {\n      setError('Heap rỗng, không thể xóa!');\n      return;\n    }\n    const newHeap = [...heap];\n    newHeap[0] = newHeap.pop(); // Thay root bằng phần tử cuối\n    if (newHeap.length > 0) {\n      heapify(newHeap, 0); // Sắp xếp lại từ root\n    }\n    setHeap(newHeap);\n    setError('');\n  };\n\n  // Hàm heapify để duy trì tính chất Max-Heap\n  const heapify = (arr, index) => {\n    const left = 2 * index + 1;\n    const right = 2 * index + 2;\n    let largest = index;\n\n    if (left < arr.length && arr[left] > arr[largest]) {\n      largest = left;\n    }\n    if (right < arr.length && arr[right] > arr[largest]) {\n      largest = right;\n    }\n    if (largest !== index) {\n      [arr[index], arr[largest]] = [arr[largest], arr[index]];\n      heapify(arr, largest);\n    }\n  };\n\n  // Xử lý khi nhấn Enter\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      addToHeap();\n    }\n  };\n\n  return (\n    <section className=\"container mx-auto py-4\">\n      {/* Tiêu đề lý thuyết */}\n      <h2 className=\"text-center font-bold text-2xl mb-4\">\n        Cấu trúc dữ liệu: Heap (Cây đống)\n      </h2>\n\n      {/* Phần lý thuyết */}\n      <section className=\"mb-3\">\n        <h4 className=\"text-lg font-semibold\">1. Lý thuyết về Heap</h4>\n        <p>\n          Heap là một cấu trúc dữ liệu dạng cây nhị phân, trong đó giá trị của mỗi nút cha luôn thỏa mãn một điều kiện so với các nút con. Trong <strong>Max-Heap</strong>, giá trị của nút cha lớn hơn hoặc bằng giá trị các nút con. Ngược lại, trong <strong>Min-Heap</strong>, nút cha nhỏ hơn hoặc bằng các nút con. Heap thường được triển khai bằng mảng, với hiệu suất cao cho các thao tác như thêm phần tử (O(log n)) và xóa phần tử lớn nhất/nhỏ nhất (O(log n)).\n        </p>\n      </section>\n\n      {/* Phần cú pháp */}\n      <section className=\"mb-3\">\n        <h4 className=\"text-lg font-semibold\">2. Cú pháp cơ bản</h4>\n        <ul className=\"list-disc pl-5\">\n          <li>\n            <strong>Thêm phần tử</strong>: Thêm phần tử vào cuối Heap và điều chỉnh (bubble up) để duy trì tính chất Heap.\n            <pre className=\"bg-gray-100 p-3 rounded\">{`heap.push(element); bubbleUp(heap, heap.length - 1);`}</pre>\n          </li>\n          <li>\n            <strong>Xóa phần tử gốc</strong>: Thay phần tử gốc bằng phần tử cuối, sau đó điều chỉnh (heapify) từ gốc.\n            <pre className=\"bg-gray-100 p-3 rounded\">{`heap[0] = heap.pop(); heapify(heap, 0);`}</pre>\n          </li>\n          <li>\n            <strong>Lấy phần tử lớn nhất (Max-Heap)</strong>: Truy cập phần tử đầu tiên của mảng.\n            <pre className=\"bg-gray-100 p-3 rounded\">{`heap[0];`}</pre>\n          </li>\n        </ul>\n      </section>\n\n      {/* Ví dụ minh họa */}\n      <section className=\"mb-3\">\n        <h4 className=\"text-lg font-semibold\">3. Ví dụ minh họa bằng PHP sử dụng array</h4>\n        <pre className=\"bg-gray-100 p-3 rounded\">\n{`<?php\n// Mô phỏng Max-Heap bằng mảng\n$heap = [];\n\n// Hàm thêm phần tử\nfunction pushToHeap(&$heap, $value) {\n    $heap[] = $value;\n    $index = count($heap) - 1;\n    while ($index > 0) {\n        $parent = floor(($index - 1) / 2);\n        if ($heap[$parent] < $heap[$index]) {\n            [$heap[$parent], $heap[$index]] = [$heap[$index], $heap[$parent]];\n            $index = $parent;\n        } else {\n            break;\n        }\n    }\n}\n\n// Hàm xóa phần tử gốc\nfunction popFromHeap(&$heap) {\n    if (empty($heap)) return null;\n    $result = $heap[0];\n    $heap[0] = array_pop($heap);\n    $index = 0;\n    while (true) {\n        $left = 2 * $index + 1;\n        $right = 2 * $index + 2;\n        $largest = $index;\n        if ($left < count($heap) && $heap[$left] > $heap[$largest]) {\n            $largest = $left;\n        }\n        if ($right < count($heap) && $heap[$right] > $heap[$largest]) {\n            $largest = $right;\n        }\n        if ($largest != $index) {\n            [$heap[$index], $heap[$largest]] = [$heap[$largest], $heap[$index]];\n            $index = $largest;\n        } else {\n            break;\n        }\n    }\n    return $result;\n}\n\n// Thêm phần tử\npushToHeap($heap, 10);\npushToHeap($heap, 20);\npushToHeap($heap, 15);\n\n// Hiển thị Heap\necho implode(', ', $heap); // 20, 10, 15\n\n// Xóa phần tử gốc\necho popFromHeap($heap); // 20\necho implode(', ', $heap); // 15, 10\n?>`}\n        </pre>\n      </section>\n\n      {/* Demo Heap */}\n      <section className=\"mb-3\">\n        <h4 className=\"text-lg font-semibold\">4. Demo Heap</h4>\n        <p>\n          Heap có thể được dùng trong React để quản lý danh sách ưu tiên, chẳng hạn sắp xếp các tác vụ theo độ ưu tiên.\n        </p>\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control form-control-sm border border-gray-300 rounded p-2\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Nhập số (VD: 10, 20)\"\n            aria-label=\"Nhập số để thêm vào Heap\"\n          />\n          <button\n            className=\"btn btn-success btn-sm mt-2 mr-2\"\n            onClick={addToHeap}\n            aria-label=\"Thêm số vào Heap\"\n          >\n            Thêm vào Heap\n          </button>\n          <button\n            className=\"btn btn-danger btn-sm mt-2\"\n            onClick={removeFromHeap}\n            aria-label=\"Xóa phần tử gốc khỏi Heap\"\n          >\n            Xóa phần tử gốc\n          </button>\n          {error && <p className=\"text-red-500 text-sm mt-1\">{error}</p>}\n        </div>\n\n        {/* Heap UI biểu diễn dưới dạng danh sách */}\n        <div className=\"mb-3\">\n          <h5 className=\"mb-2\">Danh sách phần tử trong Heap:</h5>\n          <div style={{ maxWidth: '300px' }}>\n            {heap.length > 0 ? (\n              heap.map((item, index) => (\n                <div\n                  key={item + '-' + index} // Sử dụng item và index để đảm bảo key duy nhất\n                  className=\"p-1 bg-blue-600 text-white rounded flex justify-between items-center mb-1\"\n                  style={{ fontSize: '0.9em', height: '30px' }}\n                >\n                  <span className=\"ml-2\">{item}</span>\n                </div>\n              ))\n            ) : (\n              <p className=\"text-gray-500\">Heap rỗng</p>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Ứng dụng thực tế */}\n      <section className=\"mb-3\">\n        <h4 className=\"text-lg font-semibold\">5. Ứng dụng của Heap trong thực chiến</h4>\n        <ul className=\"list-disc pl-5\">\n          <li>\n            <strong>Hàng đợi ưu tiên</strong>: Sử dụng Heap để quản lý các tác vụ có độ ưu tiên, như lập lịch công việc hoặc xử lý sự kiện.\n          </li>\n          <li>\n            <strong>Tìm kiếm phần tử lớn nhất/nhỏ nhất</strong>: Heap cho phép truy xuất nhanh phần tử lớn nhất (Max-Heap) hoặc nhỏ nhất (Min-Heap).\n          </li>\n          <li>\n            <strong>Thuật toán Dijkstra/Kruskal</strong>: Heap được sử dụng để tối ưu hóa việc tìm đường đi ngắn nhất hoặc cây bao trùm tối thiểu.\n          </li>\n          <li>\n            <strong>Xử lý dữ liệu thời gian thực</strong>: Heap hỗ trợ quản lý dữ liệu theo thứ tự ưu tiên trong các ứng dụng như hệ thống xếp hàng hoặc xử lý luồng dữ liệu.\n          </li>\n        </ul>\n        <p>\n          Với hiệu suất cao và khả năng duy trì thứ tự, Heap là công cụ lý tưởng trong các ứng dụng cần quản lý ưu tiên hoặc sắp xếp dữ liệu.\n        </p>\n      </section>\n    </section>\n  );\n}\n\nexport default Heap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}